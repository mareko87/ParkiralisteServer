/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import thread.ThreadServer;

/**
 *
 * @author marek
 */
public class ServerForm extends javax.swing.JFrame {

    /**
     * Creates new form ServerForm
     */
    private ThreadServer threadServer;

    public ServerForm() {
        initComponents();
        lblServerStatus.setText("The Server is off");
        lblServerStatus.setForeground(Color.RED);
        btnStartServer.setEnabled(true);
        btnStopServer.setEnabled(false);

        btnStartServer.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblServerStatus = new javax.swing.JLabel();
        btnStartServer = new javax.swing.JButton();
        btnStopServer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server Form");
        setResizable(false);

        lblServerStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblServerStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblServerStatus.setText("Server Status");
        lblServerStatus.setMaximumSize(new java.awt.Dimension(300, 20));
        lblServerStatus.setMinimumSize(new java.awt.Dimension(100, 20));
        lblServerStatus.setPreferredSize(new java.awt.Dimension(200, 20));

        btnStartServer.setText("Start Server");
        btnStartServer.setMaximumSize(new java.awt.Dimension(200, 30));
        btnStartServer.setMinimumSize(new java.awt.Dimension(50, 30));
        btnStartServer.setPreferredSize(new java.awt.Dimension(100, 30));
        btnStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartServerActionPerformed(evt);
            }
        });
        btnStartServer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnStartServerKeyPressed(evt);
            }
        });

        btnStopServer.setText("Stop Server");
        btnStopServer.setMaximumSize(new java.awt.Dimension(200, 30));
        btnStopServer.setMinimumSize(new java.awt.Dimension(50, 30));
        btnStopServer.setPreferredSize(new java.awt.Dimension(100, 30));
        btnStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopServerActionPerformed(evt);
            }
        });
        btnStopServer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnStopServerKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnStopServer, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(lblServerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(lblServerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStopServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartServerActionPerformed
        startServer();
    }//GEN-LAST:event_btnStartServerActionPerformed

    private void btnStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopServerActionPerformed
        stopServer();
    }//GEN-LAST:event_btnStopServerActionPerformed

    private void btnStartServerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnStartServerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            startServer();
        }
    }//GEN-LAST:event_btnStartServerKeyPressed

    private void btnStopServerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnStopServerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            stopServer();
        }
    }//GEN-LAST:event_btnStopServerKeyPressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartServer;
    private javax.swing.JButton btnStopServer;
    private javax.swing.JLabel lblServerStatus;
    // End of variables declaration//GEN-END:variables

    private void startServer() {
        threadServer = new ThreadServer();
        threadServer.start();
        lblServerStatus.setText("The server is running");
        lblServerStatus.setForeground(Color.decode("0x0A9F3A"));
        btnStartServer.setEnabled(false);
        btnStopServer.setEnabled(true);

        btnStopServer.requestFocusInWindow();
    }

    private void stopServer() {
        try {
            threadServer.getServerSocket().close();
            JOptionPane.showMessageDialog(this, "The server is stopped, closing the program...");
            this.dispose();
            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(ServerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
